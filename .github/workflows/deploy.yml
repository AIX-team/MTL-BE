name: Deploy my travel link website

on:
  push:
    branches:
      - dev  # 'dev' 브랜치로 push될 때 워크플로우 트리거

jobs:
  build-and-deploy:  # 첫 번째 작업: 빌드 및 배포
    runs-on: ubuntu-latest  # 최신 우분투 환경에서 실행

    steps:
      - name: Checkout code  # 소스 코드 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17  # JDK 17 설치
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven  # Maven 빌드
        run: mvn clean package
        env:
          SPRING_PROFILES_ACTIVE: prod
          SPRING_DATASOURCE_URL: ${{ secrets.MYSQL_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          AI_SERVER_URL: ${{ secrets.AI_SERVER_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Verify Maven Build  # 빌드 결과 확인 (target 디렉토리 파일 목록 출력)
        run: ls -la target/

      - name: Show current directory  # 현재 디렉토리 출력
        run: pwd

      - name: List all files  # 모든 파일 목록 출력
        run: ls -la

      - name: Build Docker image  # Docker 이미지 빌드 및 태그 지정
        run: docker build -t yuchankim/api-mytravellink:latest .

      - name: Log in to Docker Hub  # Docker Hub 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub  # Docker 이미지 푸시
        run: docker push yuchankim/api-mytravellink:latest

  SSH:  # 두 번째 작업: SSH를 통한 배포
    needs: build-and-deploy  # 첫 번째 작업 완료 후 실행
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code  # 소스 코드 체크아웃
        uses: actions/checkout@v3

      - name: SSH to EC2  # EC2에 SSH로 접근하여 Docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /home/***/upload  # 업로드 디렉토리 생성
            sudo docker pull yuchankim/api-mytravellink:latest  # 최신 Docker 이미지 풀
            sudo docker stop api-mytravellink || true  # 기존 컨테이너 중지 (없으면 무시)
            sudo docker rm api-mytravellink || true  # 기존 컨테이너 제거 (없으면 무시)
            sudo docker run -d --name api-mytravellink \
              -p 9000:9000 \
              -v /home/***/upload:/app/upload \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e MYSQL_URL=${{ secrets.MYSQL_URL }} \
              -e MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }} \
              -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
              -e AI_SERVER_URL=${{ secrets.AI_SERVER_URL }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              yuchankim/api-mytravellink:latest

defaults:
  run:
    working-directory: ./MyTravelLink
