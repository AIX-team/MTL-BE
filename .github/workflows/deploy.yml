name: Deploy mysite App

on:
  push:
    branches:
      - dev # dev 브랜치로 push될 때 트리거

jobs:
  build-and-deploy:	# 첫 번째 작업: 빌드 및 배포
    runs-on: ubuntu-latest			# 최신 우분투 환경에서 실행
    steps:
      - name: Checkout code			# 단계 이름: 'Checkout code(소스 가져오기)'
        uses: actions/checkout@v3	# GitHub에서 제공하는 checkout@v3 액션 사용

      - name: Set up JDK 17			# 단계 이름: 'Set up JDK 17(jdk17 설치)'
        uses: actions/setup-java@v2	# GitHub에서 제공하는 setup-java@v2 액션 사용
        with:
          java-version: '17'		# 자바 버전 17 설정
          distribution: 'temurin'	# 'temurin' OpenJDK 배포판 사용

      - name: Build with Maven		# 단계 이름: 'Build with Maven(메이븐 빌드)'
        run: mvn clean package		# Maven 빌드 명령어: clean package 실행

      - name: Verify Maven Build	# 단계 이름: 'Verify Maven Build(메이븐 빌드 확인)'
        run: ls -la target/			# Maven 빌드 후 target 디렉토리의 파일 목록 출력

      - name: Build Docker image	# 단계 이름: 'Build Docker image(도커 이미지 빌드)'
        run: docker build -t yuchankim/api-mytravellink:latest . # 도커 이미지 빌드 명령어 실행

      - name: Log in to Docker Hub	# 단계 이름: 'Log in to Docker Hub(도커허브 로그인)'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin # 도커허브 로그인

      - name: Push Docker image to Docker Hub  # 단계 이름: 'Push Docker image to Docker Hub(도커이미지 푸시)'
        run: docker push yuchankim/api-mytravellink:latest # 도커 이미지 푸시 명령어 실행

  SSH:  # 두 번째 작업: SSH
    needs: build-and-deploy # 첫 번째 작업이 완료된 후 실행
    runs-on: ubuntu-latest  # 최신 우분투 환경에서 실행
    steps:
      - uses: actions/checkout@v3 # GitHub에서 제공하는 checkout@v3 액션 사용

      - name: SSH to EC2	# 단계 이름: 'SSH to EC2(ec2에 SSH로 접근)'
        uses: appleboy/ssh-action@v0.1.5 # 안정적인 릴리스 버전 사용
        with:
          host: ${{ secrets.EC2_HOST }}					 # EC2 서버의 IP (GitHub Secrets에 설정된 값)
          username: ${{ secrets.EC2_USERNAME }}			 # EC2 서버의 사용자명 (GitHub Secrets에 설정된 값)
          key: ${{ secrets.SSH_PRIVATE_KEY }}			 # SSH 개인 키 (GitHub Secrets에 설정된 값)
          script: |
            sudo mkdir -p /home/ec2-user/upload			 
            sudo docker pull yuchankim/api-mytravellink:latest
            sudo docker stop api-mytravellink || true
            sudo docker rm api-mytravellink || true
            sudo docker run -d \
              --name api-mytravellink \
              -p 9000:9000 \
              -v /home/ec2-user/upload:/app/upload \
              yuchankim/api-mytravellink:latest
